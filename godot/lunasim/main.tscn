[gd_scene load_steps=32 format=3 uid="uid://bxmnthetrtkso"]

[ext_resource type="Script" path="res://path_manager.gd" id="1_ohl8f"]
[ext_resource type="PackedScene" uid="uid://leqgym66qbuo" path="res://robot.tscn" id="1_y4wm8"]
[ext_resource type="PackedScene" uid="uid://y0gvb4s2mi2x" path="res://apriltag.tscn" id="2_nhvh2"]
[ext_resource type="Script" path="res://rocks/rock.gd" id="3_5i5qc"]
[ext_resource type="Script" path="res://robo_camera.gd" id="3_n7k3i"]
[ext_resource type="Script" path="res://control_3d.gd" id="5_l5im3"]

[sub_resource type="GDScript" id="GDScript_lj4gt"]
script/source = "extends Node3D


func _ready() -> void:
	get_viewport().disable_3d = true


func _on_check_button_toggled(toggled_on: bool) -> void:
	if toggled_on: $PathManager.show()
	else: $PathManager.hide()
"

[sub_resource type="Curve3D" id="Curve3D_yjb38"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_k0m8n"]
transparency = 1
albedo_color = Color(0.439216, 0.647059, 0, 0.498039)

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_s0tqm"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_rwqwj"]
sky_material = SubResource("ProceduralSkyMaterial_s0tqm")

[sub_resource type="Environment" id="Environment_tv5af"]
background_mode = 2
sky = SubResource("Sky_rwqwj")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_wujp8"]
shading_mode = 0
albedo_color = Color(0.904334, 0.364874, 0.918573, 1)
use_point_size = true
point_size = 5.0

[sub_resource type="PointMesh" id="PointMesh_fxwe8"]
material = SubResource("StandardMaterial3D_wujp8")

[sub_resource type="MultiMesh" id="MultiMesh_yaeoc"]
transform_format = 1
mesh = SubResource("PointMesh_fxwe8")

[sub_resource type="GDScript" id="GDScript_03k1a"]
script/source = "extends MultiMeshInstance3D


const CELL_SIZE := 0.0625


func _ready() -> void:
	var mesh: MultiMesh = multimesh
	mesh.instance_count = 8192
	LunasimNode.heightmap.connect(
		func(heights: PackedFloat32Array):
			var i := 0
			for z in range(128):
				for x in range(64):
					mesh.set_instance_transform(i, Transform3D(Basis(), Vector3(-x * CELL_SIZE, heights[i], -z * CELL_SIZE)))
					i += 1
	)
"

[sub_resource type="GDScript" id="GDScript_x4vum"]
script/source = "extends StaticBody3D

const WIDTH := 4.0
const LENGTH := 8.0
const WIDTH_CELLS := 50
const LENGTH_CELLS := 100
const MAX_NOISE_HEIGHT := 0.1
const MAX_HILL_HEIGHT := 0.6

var thr := Thread.new()


func _ready() -> void:
	var collision_shape: CollisionShape3D = $CollisionShape3D
	var mesh_instance: MeshInstance3D = $MeshInstance3D
	var width_scale := WIDTH / (WIDTH_CELLS - 1)
	var length_scale := LENGTH / (LENGTH_CELLS - 1)
	collision_shape.scale.x = width_scale
	collision_shape.scale.z = length_scale
	collision_shape.position.x = - WIDTH / 2
	collision_shape.position.z = - LENGTH / 2
	var heightmap: HeightMapShape3D = collision_shape.shape
	heightmap.map_width = WIDTH_CELLS
	heightmap.map_depth = LENGTH_CELLS
	var map_data := heightmap.map_data
	
	thr.start(
		func():
			var noise := FastNoiseLite.new()
			noise.seed = randi()
			noise.frequency = 0.08
			
			var hills := FastNoiseLite.new()
			hills.seed = randi()
			hills.frequency = 0.01
			push_warning(\"Using noise seed: %s, hills seed: %s\" % [noise.seed, hills.seed])
			
			for x in range(WIDTH_CELLS):
				for y in range(LENGTH_CELLS):
					map_data[x + y * WIDTH_CELLS] = remap(noise.get_noise_2d(x, y), -1, 1, 0, MAX_NOISE_HEIGHT) + remap(hills.get_noise_2d(x, y), -1, 1, 0, MAX_HILL_HEIGHT)
			
			(
				func():
					heightmap.map_data = map_data
					collision_shape.position.y = - heightmap.get_min_height()
					mesh_instance.position.y = collision_shape.position.y
			).call_deferred()
			
			var mesh: ImmediateMesh = ImmediateMesh.new()
			mesh.surface_begin(Mesh.PRIMITIVE_TRIANGLE_STRIP)
			
			for y in range(LENGTH_CELLS - 1):
				for x in range(WIDTH_CELLS):
					if y % 2 != 0:
						x = WIDTH_CELLS - x - 1
					var current_height := map_data[(WIDTH_CELLS - x - 1) + (LENGTH_CELLS - y - 1) * WIDTH_CELLS]
					var next_height := map_data[(WIDTH_CELLS - x - 1) + (LENGTH_CELLS - y - 2) * WIDTH_CELLS]
					var height_diff = next_height - current_height
					var angle := atan2(height_diff, length_scale)
					
					if y % 2 == 0:
						mesh.surface_set_normal(Vector3.DOWN.rotated(Vector3.RIGHT, angle))
					else:
						mesh.surface_set_normal(Vector3.UP.rotated(Vector3.RIGHT, angle))
					
					mesh.surface_add_vertex(Vector3(- x * width_scale, current_height, - y * length_scale))
					mesh.surface_add_vertex(Vector3(- x * width_scale, next_height, - (y + 1) * length_scale))
			
			mesh.surface_end()
			mesh_instance.set_mesh.call_deferred(mesh)
	)


func _exit_tree() -> void:
	thr.wait_to_finish()
"

[sub_resource type="HeightMapShape3D" id="HeightMapShape3D_s2y32"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_501rf"]
cull_mode = 2
albedo_color = Color(0.74558, 0.74558, 0.74558, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_cjilj"]
size = Vector3(2, 2, 8)

[sub_resource type="PlaneMesh" id="PlaneMesh_twbw0"]
size = Vector2(2, 8)

[sub_resource type="BoxShape3D" id="BoxShape3D_lb8fb"]
size = Vector3(2, 2, 4)

[sub_resource type="PlaneMesh" id="PlaneMesh_reayg"]
size = Vector2(2, 4)

[sub_resource type="GDScript" id="GDScript_x4sn7"]
script/source = "extends TabContainer


func _ready() -> void:
	# Initializes subviewports by displaying them once
	for _i in range(get_child_count()):
		await get_tree().process_frame
		current_tab += 1
	current_tab = 0
"

[sub_resource type="GDScript" id="GDScript_re1ur"]
script/source = "extends MarginContainer

const DELTA := 1.0 / 30
const WIDTH := 36
const HEIGHT := 24
const MAX_DISTANCE := 4.0

var raycasts: Array[RayCast3D] = []
var depths: Array[float] = []

var _timer := DELTA

@onready var camera: Camera3D = $AspectRatioContainer/SubviewportContainer/SubViewport/DepthCamera


func _ready() -> void:
	$AspectRatioContainer.ratio = WIDTH as float / HEIGHT
	var f := WIDTH / 2.0 / tan(deg_to_rad(camera.fov) / 2.0)
	
	for y in range(HEIGHT):
		for x in range(WIDTH):
			var raycast := RayCast3D.new()
			raycast.target_position = Vector3(
				(x - (WIDTH - 1) / 2.0) / f,
				(y - (HEIGHT - 1) / 2.0) / f,
				-1
			).normalized() * MAX_DISTANCE
			raycasts.append(raycast)
			camera.add_child(raycast)
			depths.append(0.0)


func _process(delta: float) -> void:
	_timer -= delta
	if _timer <= 0.0:
		_timer = DELTA
		
		for i in range(raycasts.size()):
			var raycast := raycasts[i]
			if raycast.is_colliding():
				depths[i] = raycast.get_collision_point().distance_to(camera.global_position)
			else:
				depths[i] = 0.0
		
		LunasimNode.send_depth_map(depths)
"

[sub_resource type="GDScript" id="GDScript_4uyte"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.accelerometer_deviation = float(new_text)
	else:
		text = \"0\"
		push_error(\"Not a valid accelerometer deviation\")
"

[sub_resource type="GDScript" id="GDScript_8qrn1"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.gyroscope_deviation = float(new_text)
	else:
		text = \"0\"
		push_error(\"Not a valid gyroscope deviation\")
"

[sub_resource type="GDScript" id="GDScript_rdt3l"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.depth_deviation = float(new_text)
	else:
		text = \"0\"
		push_error(\"Not a valid depth deviation\")
"

[sub_resource type="GDScript" id="GDScript_kgahb"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.explicit_apriltag_rotation_deviation = float(new_text)
	else:
		text = \"0\"
		push_error(\"Not a valid explicit tag rotation deviation\")
"

[sub_resource type="GDScript" id="GDScript_f6nnu"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.explicit_apriltag_translation_deviation = float(new_text)
	else:
		text = \"0\"
		push_error(\"Not a valid explicit tag translation deviation\")
"

[sub_resource type="GDScript" id="GDScript_6xoh2"]
script/source = "extends Button


@onready var arena: Node3D = $\"../../../../Arena\"


func _on_pressed() -> void:
	if arena.visible:
		text = \"SHOW\"
	else:
		text = \"HIDE\"
	arena.visible = !arena.visible
"

[node name="Node3D" type="Node3D"]
script = SubResource("GDScript_lj4gt")

[node name="PathManager" type="Path3D" parent="."]
visible = false
curve = SubResource("Curve3D_yjb38")
script = ExtResource("1_ohl8f")
test_path = Array[Vector3]([Vector3(-2.5, 1, -3.5), Vector3(-2, 0.5, -6)])

[node name="CSGPolygon3D" type="CSGPolygon3D" parent="PathManager"]
polygon = PackedVector2Array(0, 0, 0, 0.05, 0.05, 0.05, 0.05, 0)
mode = 2
path_node = NodePath("..")
path_interval_type = 0
path_interval = 0.01
path_simplify_angle = 0.0
path_rotation = 2
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
material = SubResource("StandardMaterial3D_k0m8n")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_tv5af")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="WorldEnvironment"]
transform = Transform3D(-0.866023, -0.433016, 0.250001, 0, 0.499998, 0.866027, -0.500003, 0.749999, -0.43301, 0, 8.16029, 0)
shadow_enabled = true

[node name="ReflectionProbe" type="ReflectionProbe" parent="WorldEnvironment"]

[node name="HeightMap" type="MultiMeshInstance3D" parent="."]
top_level = true
layers = 4
multimesh = SubResource("MultiMesh_yaeoc")
script = SubResource("GDScript_03k1a")

[node name="Arena" type="Node3D" parent="."]

[node name="Floor" type="StaticBody3D" parent="Arena"]
collision_mask = 0
script = SubResource("GDScript_x4vum")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Arena/Floor"]
shape = SubResource("HeightMapShape3D_s2y32")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Arena/Floor"]
material_override = SubResource("StandardMaterial3D_501rf")

[node name="Walls" type="StaticBody3D" parent="Arena"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, -0.5)
collision_layer = 3
collision_mask = 0

[node name="CollisionShape3D" type="CollisionShape3D" parent="Arena/Walls"]
transform = Transform3D(-4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, -4.5, 1, -3.5)
shape = SubResource("BoxShape3D_cjilj")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Arena/Walls/CollisionShape3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.58932e-08, 1, 0)
layers = 3
mesh = SubResource("PlaneMesh_twbw0")

[node name="HideButtonMarker" type="Marker3D" parent="Arena/Walls/CollisionShape3D/MeshInstance3D"]
transform = Transform3D(1, 8.74228e-08, 3.82137e-15, 8.74228e-08, -1, -8.74228e-08, -3.82137e-15, 8.74228e-08, -1, -1, 0, 4)

[node name="CollisionShape3D4" type="CollisionShape3D" parent="Arena/Walls"]
transform = Transform3D(4.37114e-08, -1, -8.74228e-08, -1, -4.37114e-08, 0, -3.82137e-15, 8.74228e-08, -1, 1.5, 1, -3.5)
shape = SubResource("BoxShape3D_cjilj")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Arena/Walls/CollisionShape3D4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.58932e-08, 1, 0)
layers = 3
mesh = SubResource("PlaneMesh_twbw0")

[node name="CollisionShape3D2" type="CollisionShape3D" parent="Arena/Walls"]
transform = Transform3D(1.91069e-15, -4.37114e-08, 1, -1, -4.37114e-08, 0, 4.37114e-08, -1, -4.37114e-08, -1.5, 1, 1.5)
shape = SubResource("BoxShape3D_lb8fb")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Arena/Walls/CollisionShape3D2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
layers = 3
mesh = SubResource("PlaneMesh_reayg")

[node name="CollisionShape3D3" type="CollisionShape3D" parent="Arena/Walls"]
transform = Transform3D(-5.73206e-15, 1.31134e-07, -1, -1, -4.37114e-08, 0, -4.37114e-08, 1, 1.31134e-07, -1.5, 1, -8.5)
shape = SubResource("BoxShape3D_lb8fb")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Arena/Walls/CollisionShape3D3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
layers = 3
mesh = SubResource("PlaneMesh_reayg")

[node name="Rocks" type="Node3D" parent="Arena"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.25613, 0, -6.70293)

[node name="Rock" type="Node3D" parent="Arena/Rocks"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.861442, 2.20208, -1.0874)
script = ExtResource("3_5i5qc")

[node name="Rock2" type="Node3D" parent="Arena/Rocks"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.32198, 2.20208, -1.0874)
script = ExtResource("3_5i5qc")

[node name="Rock3" type="Node3D" parent="Arena/Rocks"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.71816, 2.20208, -1.0874)
script = ExtResource("3_5i5qc")

[node name="Robot" parent="." instance=ExtResource("1_y4wm8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, -1)

[node name="OriginOnly" parent="Robot" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, -1)

[node name="ExternalView" parent="Robot/OriginOnly/CameraPivot" index="0"]
remote_path = NodePath("../../../../CanvasLayer/TabContainer/ExternalView/SubviewportContainer/SubViewport/ExternalCamera")

[node name="DepthCamera" parent="Robot" index="2"]
remote_path = NodePath("../../CanvasLayer/TabContainer/DepthCamera1/AspectRatioContainer/SubviewportContainer/SubViewport/DepthCamera")
script = null

[node name="RearCamera" parent="Robot" index="3"]
remote_path = NodePath("../../CanvasLayer/TabContainer/RearCamera/AspectRatioContainer/SubviewportContainer/SubViewport/RearCamera")

[node name="RaycastOrigin" parent="Robot" index="10"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, -1)

[node name="Apriltag" parent="." instance=ExtResource("2_nhvh2")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.610044, 0.50416)
explicit = true

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="TabContainer" type="TabContainer" parent="CanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
current_tab = 0
tab_focus_mode = 0
script = SubResource("GDScript_x4sn7")

[node name="ExternalView" type="MarginContainer" parent="CanvasLayer/TabContainer"]
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10
metadata/_tab_index = 0

[node name="SubviewportContainer" type="SubViewportContainer" parent="CanvasLayer/TabContainer/ExternalView"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/TabContainer/ExternalView/SubviewportContainer"]
handle_input_locally = false
size = Vector2i(1132, 597)
render_target_update_mode = 4

[node name="ExternalCamera" type="Camera3D" parent="CanvasLayer/TabContainer/ExternalView/SubviewportContainer/SubViewport"]
transform = Transform3D(0.283078, -0.220396, 0.93343, -1.77252e-08, 0.973239, 0.229795, -0.959097, -0.0650499, 0.275503, 2.23287, 1.29588, -0.0458146)

[node name="DepthCamera1" type="MarginContainer" parent="CanvasLayer/TabContainer"]
visible = false
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10
script = SubResource("GDScript_re1ur")
metadata/_tab_index = 1

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="CanvasLayer/TabContainer/DepthCamera1"]
layout_mode = 2

[node name="SubviewportContainer" type="SubViewportContainer" parent="CanvasLayer/TabContainer/DepthCamera1/AspectRatioContainer"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/TabContainer/DepthCamera1/AspectRatioContainer/SubviewportContainer"]
handle_input_locally = false
size = Vector2i(2, 2)
render_target_update_mode = 0

[node name="DepthCamera" type="Camera3D" parent="CanvasLayer/TabContainer/DepthCamera1/AspectRatioContainer/SubviewportContainer/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 0.972921, 0.231137, 0, -0.231137, 0.972921, -1, 0.572526, -1.29819)
cull_mask = 1048571
fov = 120.0
script = ExtResource("3_n7k3i")

[node name="RearCamera" type="MarginContainer" parent="CanvasLayer/TabContainer"]
visible = false
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10
metadata/_tab_index = 2

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="CanvasLayer/TabContainer/RearCamera"]
layout_mode = 2
ratio = 1.666

[node name="SubviewportContainer" type="SubViewportContainer" parent="CanvasLayer/TabContainer/RearCamera/AspectRatioContainer"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/TabContainer/RearCamera/AspectRatioContainer/SubviewportContainer"]
handle_input_locally = false
size = Vector2i(2, 2)
render_target_update_mode = 0

[node name="RearCamera" type="Camera3D" parent="CanvasLayer/TabContainer/RearCamera/AspectRatioContainer/SubviewportContainer/SubViewport"]
transform = Transform3D(-1, -2.02066e-08, 8.50555e-08, 0, 0.972921, 0.231137, -8.74228e-08, 0.231137, -0.972921, -1, 0.572526, -0.751349)
cull_mask = 1048571
fov = 120.0
script = ExtResource("3_n7k3i")

[node name="ArenaCamera1" type="MarginContainer" parent="CanvasLayer/TabContainer"]
visible = false
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10
metadata/_tab_index = 3

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="CanvasLayer/TabContainer/ArenaCamera1"]
layout_mode = 2
ratio = 1.666

[node name="SubviewportContainer" type="SubViewportContainer" parent="CanvasLayer/TabContainer/ArenaCamera1/AspectRatioContainer"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/TabContainer/ArenaCamera1/AspectRatioContainer/SubviewportContainer"]
handle_input_locally = false
size = Vector2i(2, 2)
render_target_update_mode = 0

[node name="ArenaCamera1" type="Camera3D" parent="CanvasLayer/TabContainer/ArenaCamera1/AspectRatioContainer/SubviewportContainer/SubViewport"]
transform = Transform3D(0.767165, -0.436648, 0.469889, 0, 0.732543, 0.680721, -0.64145, -0.522225, 0.561981, 0.405, 1.805, 0.384)
cull_mask = 1048571
fov = 100.0
script = ExtResource("3_n7k3i")

[node name="Control" type="Control" parent="CanvasLayer"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 10.0
offset_top = 40.0
offset_right = -10.0
offset_bottom = -10.0
grow_horizontal = 2
grow_vertical = 2
metadata/_edit_use_anchors_ = true

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/Control"]
layout_mode = 1
anchors_preset = -1
anchor_left = 1.0
anchor_right = 1.0
offset_top = 10.0
offset_right = -10.0
grow_horizontal = 0

[node name="Label" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Accelerometer σ"

[node name="LineEdit" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
focus_mode = 1
text = "0.0"
script = SubResource("GDScript_4uyte")

[node name="Label2" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Gyroscope σ"

[node name="LineEdit2" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
focus_mode = 1
text = "0.0"
script = SubResource("GDScript_8qrn1")

[node name="Label3" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Depth σ"

[node name="LineEdit3" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
focus_mode = 1
text = "0.0"
script = SubResource("GDScript_rdt3l")

[node name="Label4" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Explicit Tag Rotation σ"

[node name="LineEdit4" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
focus_mode = 1
text = "0.0"
script = SubResource("GDScript_kgahb")

[node name="Label5" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Explicit Tag Translation σ"

[node name="LineEdit5" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
focus_mode = 1
text = "0.0"
script = SubResource("GDScript_f6nnu")

[node name="Label6" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Show Path"

[node name="CheckButton" type="CheckButton" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 0

[node name="Control3D" type="Control" parent="CanvasLayer/Control" node_paths=PackedStringArray("node3d", "camera")]
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
script = ExtResource("5_l5im3")
node3d = NodePath("../../../Arena/Walls/CollisionShape3D/MeshInstance3D/HideButtonMarker")
camera = NodePath("../../TabContainer/ExternalView/SubviewportContainer/SubViewport/ExternalCamera")

[node name="Button" type="Button" parent="CanvasLayer/Control/Control3D"]
layout_mode = 0
offset_left = -22.0
offset_top = -14.0
offset_right = 24.0
offset_bottom = 17.0
text = "HIDE"
script = SubResource("GDScript_6xoh2")

[connection signal="fov_changed" from="Robot/OriginOnly/CameraPivot" to="CanvasLayer/TabContainer/ExternalView/SubviewportContainer/SubViewport/ExternalCamera" method="set_fov"]
[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit" to="CanvasLayer/Control/VBoxContainer/LineEdit" method="_on_text_submitted"]
[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit2" to="CanvasLayer/Control/VBoxContainer/LineEdit2" method="_on_text_submitted"]
[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit3" to="CanvasLayer/Control/VBoxContainer/LineEdit3" method="_on_text_submitted"]
[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit4" to="CanvasLayer/Control/VBoxContainer/LineEdit4" method="_on_text_submitted"]
[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit5" to="CanvasLayer/Control/VBoxContainer/LineEdit5" method="_on_text_submitted"]
[connection signal="toggled" from="CanvasLayer/Control/VBoxContainer/CheckButton" to="." method="_on_check_button_toggled"]
[connection signal="pressed" from="CanvasLayer/Control/Control3D/Button" to="CanvasLayer/Control/Control3D/Button" method="_on_pressed"]

[editable path="Robot"]
